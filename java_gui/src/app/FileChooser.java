/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.ChangedCharSetException;

/**
 *
 * @author NCT99
 */
public class FileChooser extends javax.swing.JFrame {
        private static final int file_open=1;
        private static final int file_save=2;
        private boolean changed=false;
    /**
     * Creates new form FileChooser
     */
    public FileChooser() {
        initComponents();
        setLocation(150, 200);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Textarea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itemNew = new javax.swing.JMenuItem();
        itemSave = new javax.swing.JMenuItem();
        itemOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itemWrapWord = new javax.swing.JCheckBoxMenuItem();
        itemWrapLine = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Textarea.setColumns(20);
        Textarea.setLineWrap(true);
        Textarea.setRows(5);
        Textarea.setWrapStyleWord(true);
        Textarea.setDragEnabled(true);
        Textarea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextareaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(Textarea);

        jMenu1.setText("File");

        itemNew.setText("new");
        itemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNewActionPerformed(evt);
            }
        });
        jMenu1.add(itemNew);

        itemSave.setText("save");
        itemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSaveActionPerformed(evt);
            }
        });
        jMenu1.add(itemSave);

        itemOpen.setText("open");
        itemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(itemOpen);
        jMenu1.add(jSeparator1);

        itemExit.setText("exit");
        itemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExitActionPerformed(evt);
            }
        });
        jMenu1.add(itemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jMenu2StateChanged(evt);
            }
        });

        itemWrapWord.setSelected(true);
        itemWrapWord.setText("Wrap word");
        itemWrapWord.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                itemWrapWordStateChanged(evt);
            }
        });
        jMenu2.add(itemWrapWord);

        itemWrapLine.setSelected(true);
        itemWrapLine.setText("Wrap Line ");
        itemWrapLine.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                itemWrapLineStateChanged(evt);
            }
        });
        jMenu2.add(itemWrapLine);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNewActionPerformed
        // TODO add your handling code here:
      //  JOptionPane.showMessageDialog(null, "chọn new");
        if(changed){
            int result=JOptionPane.showConfirmDialog(null, "bạn có muốn lưu file này?");
            if(result==JOptionPane.YES_OPTION){
                   oparateFile("lưu file", file_save,1);
                }
        }
        Textarea.setText("");
        Textarea.requestFocus();
        this.setTitle("");
        changed=false;
        
    }//GEN-LAST:event_itemNewActionPerformed

    private void itemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSaveActionPerformed
        // TODO add your handling code here:
       // JOptionPane.showMessageDialog(null, "chọn save");
        oparateFile("lưu file", file_save,2);
        
    }//GEN-LAST:event_itemSaveActionPerformed

    private void itemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemOpenActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "chọn open");
        if(changed){
            int result=JOptionPane.showConfirmDialog(null, "bạn có muốn lưu file này?");
            if(result==JOptionPane.YES_OPTION){
                   oparateFile("lưu file", file_save,1);
                }
        }
        oparateFile("mở file", file_open,2);
        changed=false;
    }//GEN-LAST:event_itemOpenActionPerformed

    private void itemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_itemExitActionPerformed

    private void TextareaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextareaKeyTyped
        // TODO add your handling code here:
        changed=true;
    }//GEN-LAST:event_TextareaKeyTyped

    private void jMenu2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jMenu2StateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu2StateChanged

    private void itemWrapWordStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_itemWrapWordStateChanged
        // TODO add your handling code here:
        Textarea.setWrapStyleWord(itemWrapWord.isSelected());
        /*tức là: itemWrapWord.isSelected() sẽ trả về true/false   */
        Textarea.setText(Textarea.getText());//set text lại để ăn vào thuộc tính mới.
    }//GEN-LAST:event_itemWrapWordStateChanged

    private void itemWrapLineStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_itemWrapLineStateChanged
        // TODO add your handling code here:
        Textarea.setLineWrap(itemWrapLine.isSelected());
        Textarea.setText(Textarea.getText());
    }//GEN-LAST:event_itemWrapLineStateChanged
    public void oparateFile(String title , int type,int order){
        JFileChooser chooser=new JFileChooser();
        chooser.setDialogTitle(title);
        int choose=-1;
        switch(type){
            case file_open: 
                choose=chooser.showOpenDialog(null);
                break;
            case file_save:
                choose=chooser.showSaveDialog(null);
                break;
        }
        if(choose==JFileChooser.APPROVE_OPTION){
           File file=chooser.getSelectedFile();
            switch(type){
            case file_open: 
                JOptionPane.showMessageDialog(null, " open a file");
                readFile(file);
                break;
            case file_save:
                if(order==2){
                    int result=JOptionPane.showConfirmDialog(null, "bạn có muốn lưu file này?");
                    if(result==JOptionPane.YES_OPTION){
                        // JOptionPane.showMessageDialog(null, " save a file");
                         WriteFile(file);
                         this.setTitle(file.getName());
                    }
                }
                else WriteFile(file);
                break;
            }   
        }
    }
     private void readFile(File file) {
         try {
             Textarea.setText(null);
             FileReader fr=new FileReader(file);
             BufferedReader br=new BufferedReader(fr);
             String lineString;
             while ((lineString=br.readLine())!=null) {
                 Textarea.append(lineString+"\n");
             }
             br.close();
             fr.close();
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "error open file :"+e.toString());
         }

    }

    private void WriteFile(File file) {
        try {
            file.createNewFile();
            FileWriter fw=new FileWriter(file);
            BufferedWriter bw=new BufferedWriter(fw);
            String data=Textarea.getText();
            bw.write(data);
            bw.close();
            fw.close();
            readFile(file);
            changed=false;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "lỗi ghi file:"+e.toString());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileChooser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Textarea;
    private javax.swing.JMenuItem itemExit;
    private javax.swing.JMenuItem itemNew;
    private javax.swing.JMenuItem itemOpen;
    private javax.swing.JMenuItem itemSave;
    private javax.swing.JCheckBoxMenuItem itemWrapLine;
    private javax.swing.JCheckBoxMenuItem itemWrapWord;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables

   
}
